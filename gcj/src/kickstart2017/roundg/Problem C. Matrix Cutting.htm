<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0062)https://code.google.com/codejam/contest/3254486/dashboard#s=p2 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="refresh" content="172795">
  
  <title>
    Dashboard - Kickstart Round G 2017 - Google Code Jam
  </title>

    <style>@import '//www.google.com/css/modules/buttons/g-button-sparrow.css';</style>
    <link rel="stylesheet" type="text/css" href="./Problem C. Matrix Cutting_files/app.css">





    <script type="text/javascript" async="" src="./Problem C. Matrix Cutting_files/ga.js"></script><script src="./Problem C. Matrix Cutting_files/App_en.js"></script><style></style>
    

  <script type="text/javascript"><!--
    /**
     * Initializes GCJ.problems and GCJ.io from Django parameters.
     * Also initializes the two user specific variables GCJ.isQualified and
     * GCJ.lastClarSeenTime.
     * This is the first function called once from GCJ.dashboardMain().
     */
    GCJ.initContestVariables = function () {
      // Convert Django's 'contest' to 'GCJ.contest'.
      GCJ.contest.id = "3254486";
      GCJ.contest.name = "Kickstart Round G 2017";
      GCJ.contest.version = 0;
      
        GCJ.contest.version = 4;
      
      GCJ.contest.start_int = 1508648400;
      GCJ.contest.running = false;
      GCJ.base_url = '/codejam/contest';
      GCJ.scoreboardLink = ('<a target="new"' +
                            'href="scoreboard?c=3254486"' +
                            '>Contest scoreboard</a>');
    }

    /**
     * Returns the current splash page.
     */
    GCJ.getSplashPage = function () {
      return "/codejam/kickstart2017";
    };
  //-->
  </script>
</head>

<body onload="GCJ.dashboardMain()" class="page-dashboard">

<div id="logo-div">
  <a href="https://code.google.com/codejam/kickstart/">
    <img src="./Problem C. Matrix Cutting_files/logo_kickstart_2017.jpg" id="logo" alt="Google Code Jam">
  </a>
</div>

<div>

<div id="dsb-page-body">

<div id="left-panel">
  <div class="v-divider"></div>
  <div class="v-divider"></div>
  <div class="v-divider"></div>
  <!-- Problem Selection Panel -->
  <div id="dsb-contest-title">Kickstart Round G 2017</div>
  <hr class="dsb-hr">
  <div id="dsb-problem-selection-area">
    <div id="dsb-problem-selection-list" class="after-start-only" style="display: block;">
    <div><div id="dsb-problem-tab0" class="dsb-problem-tab-close" tabindex="0" role="button">  <div id="dsb-problem-title0" class="dynamic-link">A. Huge Numbers  </div></div></div><div><div id="dsb-problem-tab1" class="dsb-problem-tab-close" tabindex="0" role="button">  <div id="dsb-problem-title1" class="dynamic-link">B. Cards Game  </div></div></div><div><div id="dsb-problem-tab2" class="dsb-problem-tab-open" tabindex="0" role="button">  <div id="dsb-problem-title2" class="dynamic-link">C. Matrix Cutting  </div></div></div></div>
    <div id="dsb-problem-selection-list-pre-contest" class="dsb-pre-contest-text before-start-only" style="display: none;">
      The list of problems will appear here after the contest loads.
      
    </div>
  </div>
  <hr class="dsb-hr">
  <div class="v-divider"></div>
  <div class="v-divider"></div>
  <div id="dsb-analysis-button" class="dsb-analysis-tab-close" tabindex="0" role="button" style="display: block;">
    <div class="dynamic-link">
       <div id="dsb-analysis-tab">
         Contest Analysis
       </div>
    </div>
  </div>
  <div id="dsb-ask-question-area">
    <div id="dsb-ask-question-button" class="dsb-clar-tab-close" tabindex="0" role="button" style="display: block;">
      <div class="dynamic-link">
        <div id="dsb-ask-question-tab" class="dsb-has-new-question-tab">Questions asked<span class="dsb-unread-count">1</span></div>
      </div>
    </div>
    <div class="dsb-pre-contest-text before-start-only" style="display: none;">
      You'll be able to ask questions about the problems, and view your
      submissions, here.
      
    </div>
  </div>
  <div id="dsb-submissions-button" class="dsb-submissions-tab-close" tabindex="0" role="button" style="display: none;">
    <div class="dynamic-link">
      <div id="dsb-submissions-tab">
        View my submissions
      </div>
    </div>
  </div>
  <div class="v-divider"></div>
  <div class="v-divider"></div>
  <div class="dsb-mini-tab-wrapper">
  <div id="dsb-status-div-container">
    <div id="dsb-status-header-div" onmouseover="this.style.cursor=&#39;pointer&#39;" onclick="GCJ.toggleStatusPanelVisibility();">
      <img id="dsb-status-panel-button" src="./Problem C. Matrix Cutting_files/minus.gif">
      &nbsp; Submissions
    </div>
    <div id="dsb-status-tab" class="after-start-only" style="display: block;">
      <div id="dsb-status-tab-loading-text" class="dsb-pre-contest-text" style="display: none;">
        Loading...
      </div>
    <div id="dsb-status-tab-problems" style="display: block;"><div><div id="dsb-problem-status-wrapper0" class="problem-status-wrapper">  <div class="dsb-status-problem-title">Huge Numbers</div><div><table class="problemStatus">  <tbody>    <tr class="inputSetStatus">      <td id="inputName0_0" class="inputName">9pt</td>      <td class="status">        <div id="selfStat0_0" class="dsb-mini-status-non-highlight">Not attempted</div>        <div id="globalStat0_0" class="globalStat" style="display: block;"><b>1132/1901 users</b> correct (60%)</div>      </td>    </tr>  </tbody></table></div><div><table class="problemStatus">  <tbody>    <tr class="inputSetStatus">      <td id="inputName0_1" class="inputName">14pt</td>      <td class="status">        <div id="selfStat0_1" class="dsb-mini-status-non-highlight">Not attempted</div>        <div id="globalStat0_1" class="globalStat" style="display: block;"><b>527/999 users</b> correct (53%)</div>      </td>    </tr>  </tbody></table></div></div></div><div><div id="dsb-problem-status-wrapper1" class="problem-status-wrapper">  <div class="dsb-status-problem-title">Cards Game</div><div><table class="problemStatus">  <tbody>    <tr class="inputSetStatus">      <td id="inputName1_0" class="inputName">15pt</td>      <td class="status">        <div id="selfStat1_0" class="dsb-mini-status-non-highlight">Not attempted</div>        <div id="globalStat1_0" class="globalStat" style="display: block;"><b>446/660 users</b> correct (68%)</div>      </td>    </tr>  </tbody></table></div><div><table class="problemStatus">  <tbody>    <tr class="inputSetStatus">      <td id="inputName1_1" class="inputName">19pt</td>      <td class="status">        <div id="selfStat1_1" class="dsb-mini-status-non-highlight">Not attempted</div>        <div id="globalStat1_1" class="globalStat" style="display: block;"><b>202/311 users</b> correct (65%)</div>      </td>    </tr>  </tbody></table></div></div></div><div><div id="dsb-problem-status-wrapper2" class="problem-status-wrapper">  <div class="dsb-status-problem-title">Matrix Cutting</div><div><table class="problemStatus">  <tbody>    <tr class="inputSetStatus">      <td id="inputName2_0" class="inputName">17pt</td>      <td class="status">        <div id="selfStat2_0" class="dsb-mini-status-non-highlight">Not attempted</div>        <div id="globalStat2_0" class="globalStat" style="display: block;"><b>483/570 users</b> correct (85%)</div>      </td>    </tr>  </tbody></table></div><div><table class="problemStatus">  <tbody>    <tr class="inputSetStatus">      <td id="inputName2_1" class="inputName">25pt</td>      <td class="status">        <div id="selfStat2_1" class="dsb-mini-status-non-highlight">Not attempted</div>        <div id="globalStat2_1" class="globalStat" style="display: block;"><b>226/328 users</b> correct (69%)</div>      </td>    </tr>  </tbody></table></div></div></div></div></div>
    <div id="dsb-status-tab-pre-contest" class="dsb-pre-contest-text before-start-only" style="display: none;">
      Statistics about the problems will appear here.  They'll include your
      status on each problem, and other contestants' attempts.
      
    </div>
  </div>
  </div>
  <div class="v-divider"></div>
  <div class="v-divider"></div>
  <!-- Mini Scoreboard -->
  <div class="dsb-mini-tab-wrapper">
    <div id="dsb-scoreboard-div">
      <div id="dsb-scoreboard-header-div" onmouseover="this.style.cursor=&#39;pointer&#39;" onclick="GCJ.toggleVisibility(
              &#39;dsb-scoreboard-table&#39;,
              &#39;dsb-scoreboard-panel-button&#39;,
              &#39;/codejam/contest/static/minus.gif&#39;,
              &#39;/codejam/contest/static/plus.gif&#39;)">
          <img id="dsb-scoreboard-panel-button" src="./Problem C. Matrix Cutting_files/minus.gif">
          &nbsp; Top Scores
      </div>
      <div id="dsb-scoreboard-table-wrap" class="after-start-only" style="display: block;"><table id="dsb-scoreboard-table"><tbody><tr class="dsb-scoreboard-row-even" id="sbRow_0" style="display: block;"><td class="dsb-name-td" id="sbName_0">iskim</td><td class="dsb-score-td" id="sbScore_0">99</td></tr><tr class="dsb-scoreboard-row-odd" id="sbRow_1" style="display: block;"><td class="dsb-name-td" id="sbName_1">prabowo</td><td class="dsb-score-td" id="sbScore_1">99</td></tr><tr class="dsb-scoreboard-row-even" id="sbRow_2" style="display: block;"><td class="dsb-name-td" id="sbName_2">rajat1603</td><td class="dsb-score-td" id="sbScore_2">99</td></tr><tr class="dsb-scoreboard-row-odd" id="sbRow_3" style="display: block;"><td class="dsb-name-td" id="sbName_3">gs12117</td><td class="dsb-score-td" id="sbScore_3">99</td></tr><tr class="dsb-scoreboard-row-even" id="sbRow_4" style="display: block;"><td class="dsb-name-td" id="sbName_4">Doju</td><td class="dsb-score-td" id="sbScore_4">99</td></tr><tr class="dsb-scoreboard-row-odd" id="sbRow_5" style="display: block;"><td class="dsb-name-td" id="sbName_5">zl1zl</td><td class="dsb-score-td" id="sbScore_5">99</td></tr><tr class="dsb-scoreboard-row-even" id="sbRow_6" style="display: block;"><td class="dsb-name-td" id="sbName_6">Arcturus</td><td class="dsb-score-td" id="sbScore_6">99</td></tr><tr class="dsb-scoreboard-row-odd" id="sbRow_7" style="display: block;"><td class="dsb-name-td" id="sbName_7">mg1007</td><td class="dsb-score-td" id="sbScore_7">99</td></tr><tr class="dsb-scoreboard-row-even" id="sbRow_8" style="display: block;"><td class="dsb-name-td" id="sbName_8">hank55663</td><td class="dsb-score-td" id="sbScore_8">99</td></tr><tr class="dsb-scoreboard-row-odd" id="sbRow_9" style="display: block;"><td class="dsb-name-td" id="sbName_9">NAFIS</td><td class="dsb-score-td" id="sbScore_9">99</td></tr></tbody></table></div>
      <div id="dsb-scoreboard-tab-pre-contest" class="dsb-pre-contest-text before-start-only" style="display: none;">
        The scores of the top 10 contestants will appear here, with a link to
        the contest's scoreboard.
        
      </div>
      <div class="dsb-mini-tab-link">
      </div>
    </div>
  </div>
</div>

<div id="right-panel">
  <div id="dsb-status-msg-wrapper" class="dsb-status-msg-wrapper" role="alert" style="visibility: hidden;">
    <div id="dsb-status-msg" class="dsb-status-msg">
      <span id="dsb-status-msg-text">Loading problem information...</span>
      <span id="dsb-view-sub-link" style="display: none;">View submissions.</span>
    </div>
  </div>

  <div id="dsb-contest-title-bar">
    <div id="dsb-rank-etc">
      <span id="dsb-time-remaining">Practice Mode</span>
      <span class="after-start-only-inline" style="display: inline;">
        <span id="dsb-current-rank-div" style="display: none;">
          Rank: <span id="dsb-current-rank-span">--</span>
        </span>
        <span id="dsb-current-score-div" style="display: none;">
          Score: <span id="dsb-current-score-span">--</span>
        </span>
      </span>
    </div>
    <div id="dsb-title-links"><a target="new" href="https://code.google.com/codejam/contest/3254486/scoreboard?c=3254486">Contest scoreboard</a> | <a href="https://www.google.com/accounts/ServiceLogin?service=ah&amp;passive=true&amp;continue=https://appengine.google.com/_ah/conflogin%3Fcontinue%3Dhttps://code.google.com/codejam/contest/dashboard%253Fc%253D3254486">Sign in</a></div>
  </div>
  <!-- Problem Statement -->
  <div id="main-panel-border" class="dsb-blue-border">
  <div id="dsb-border-inner">
   <!-- Problem Title -->
    <h3 id="dsb-problem-title-area">
      <span id="dsb-problem-title-div-pre-contest" class="problem-title before-start-only" style="display: none;">
        <span style="color:#666">Problem.</span>
        The problem's name goes here.
      </span>
      <span id="dsb-problem-title-div" class="problem-title after-start-only" style="display: block;"><span style="color:#666">Problem C.</span> Matrix Cutting</span>
    </h3>

    <div class="dsb-content-pages before-start-only" style="display: none;">
      We're now waiting for the contest to start.  Once the contest starts,
      the problems will automatically load, and Problem A will display here.
      You don't have to solve that problem first; you will be able to select
      another problem from the list to the left.  Once you've solved one
      problem, don't forget to work on the others!
      
    </div>

    <div id="dsb-problem-pages"><div id="dsb-problem-page0" class="dsb-content-pages" style="display: none;"><!-- Problem Input File Selection --><div class="dsb-input-panel-text" id="dsb-input-panel-text0"><span style="color: #666666;">This contest is open for practice.  You can try every problem as many times as you like, though we won't keep track of which problems you solve.  Read the <a href="https://code.google.com/codejam/resources/quickstart-guide#gcj" target="_blank">Quick-Start Guide</a> to get started.</span></div><table><tbody id="dsb-input-form-table0"><tr><td class="dsb-input-table-description">Small input<br>9 points</td><td class="dsb-input-table-linktd"><div id="dsb-action-box-wrap0-0" class=""><div id="dsb-input-wrapper0-0" class="dsb-input-wrapper" style="display: inline;"><button class="dsb-input-start-button" id="dsb-input-start-button0-0" style="display: inline;">Solve A-small</button><span class="dsb-input-link-span" id="dsb-input-link-plain0-0" style="display: none;"><img class="dsb-input-link-img" src="./Problem C. Matrix Cutting_files/file.gif"><span class="dsb-input-link-text" id="dsb-input-link-plain-text0-0">Download A-small-practice.in</span></span></div><span class="dsb-input-table-caption" id="dsb-input-table-caption0-0" style="display: none;"></span><span class="dsb-input-table-caption" id="dsb-resubmit-caption0-0" style="display: none;">Your submission was received. You can still <span class="dsb-input-link-text" id="dsb-resubmit-link0-0">resubmit</span> for <span id="dsb-resubmit-timer0-0"></span>.<br>Only your last submission counts. <span class="dsb-input-link-text" id="dsb-resubmit-view-sub-link0-0">View your last submission</span>.</span><div><div class="dsb-submit-form-div" id="dsb-submit-form-div0-0" style="display: none;"><div style="display:none"><b>Time Remaining:</b> <span id="io_timer_0"></span>&nbsp;&nbsp;</div><div style="display:none"><b>Input:</b> A-small-practice.in.</div><form id="submit-formio_timer_0" action="https://code.google.com/codejam/contest/3254486/dashboard/do" enctype="multipart/form-data" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="ZTU1MDE2MDZjNDdmYjc0MTc4NDVhMWMwYjJkOGYwMTd8fDE1MjI2NDk3MTI5MjgyMDA="><div class="dsb-submit-form-separator">your output file:<input id="output-fileio_timer_0" type="file" name="answer" class="submitFormFile"></div><div style="display: none"><table class="dsb-source-code-table"><tbody><tr><td style="padding:0.4em 0.2em 0 0">source code:&nbsp;&nbsp;</td><td><div id="source-filesio_timer_0"><div id="input-file-divio_timer_0-0"><span id="source-fileio_timer_0-0"><input type="file" name="source-file0" class="submitFormFile"></span><span id="remove-source-fileio_timer_0-0" class="dsb-submit-form-links" style="visibility: hidden;">remove</span></div></div><span id="add-source-fileio_timer_0" class="dsb-submit-form-links">Add another file</span></td></tr></tbody></table></div><div class="dsb-submit-form-separator" style="color:gray">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><div class="dsb-submit-form-separator" style="text-align:center"><input id="submit-buttonio_timer_0" type="button" value="Submit file">&nbsp;&nbsp;<input id="dsb-hide-submissionio_timer_0" type="button" value="Hide"></div><div id="source-file-namesio_timer_0"></div><input type="hidden" name="cmd" value="SubmitAnswer"><input type="hidden" name="problem" value="5727489229848576"><input type="hidden" name="input_id" value="0"><input type="hidden" name="num_source_files" id="num-source-filesio_timer_0" value="1"><input type="hidden" name="agent" value="website"></form></div></div></div></td></tr><tr><td class="dsb-input-table-description">Large input<br>14 points</td><td class="dsb-input-table-linktd"><div id="dsb-action-box-wrap0-1" class=""><div id="dsb-input-wrapper0-1" class="dsb-input-wrapper" style="display: inline;"><button class="dsb-input-start-button" id="dsb-input-start-button0-1" style="display: inline;">Solve A-large</button><span class="dsb-input-link-span" id="dsb-input-link-plain0-1" style="display: none;"><img class="dsb-input-link-img" src="./Problem C. Matrix Cutting_files/file.gif"><span class="dsb-input-link-text" id="dsb-input-link-plain-text0-1">Download A-large-practice.in</span></span></div><span class="dsb-input-table-caption" id="dsb-input-table-caption0-1" style="display: none;"></span><span class="dsb-input-table-caption" id="dsb-resubmit-caption0-1" style="display: none;">Your submission was received. You can still <span class="dsb-input-link-text" id="dsb-resubmit-link0-1">resubmit</span> for <span id="dsb-resubmit-timer0-1"></span>.<br>Only your last submission counts. <span class="dsb-input-link-text" id="dsb-resubmit-view-sub-link0-1">View your last submission</span>.</span><div><div class="dsb-submit-form-div" id="dsb-submit-form-div0-1" style="display: none;"><div style="display:none"><b>Time Remaining:</b> <span id="io_timer_1"></span>&nbsp;&nbsp;</div><div style="display:none">You may resubmit this multiple times within the remaining time-frame. Only your last submission will count.</div><form id="submit-formio_timer_1" action="https://code.google.com/codejam/contest/3254486/dashboard/do" enctype="multipart/form-data" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="ZTU1MDE2MDZjNDdmYjc0MTc4NDVhMWMwYjJkOGYwMTd8fDE1MjI2NDk3MTI5MjgyMDA="><div class="dsb-submit-form-separator">your output file:<input id="output-fileio_timer_1" type="file" name="answer" class="submitFormFile"></div><div style="display: none"><table class="dsb-source-code-table"><tbody><tr><td style="padding:0.4em 0.2em 0 0">source code:&nbsp;&nbsp;</td><td><div id="source-filesio_timer_1"><div id="input-file-divio_timer_1-0"><span id="source-fileio_timer_1-0"><input type="file" name="source-file0" class="submitFormFile"></span><span id="remove-source-fileio_timer_1-0" class="dsb-submit-form-links" style="visibility: hidden;">remove</span></div></div><span id="add-source-fileio_timer_1" class="dsb-submit-form-links">Add another file</span></td></tr></tbody></table></div><div class="dsb-submit-form-separator" style="color:gray">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><div class="dsb-submit-form-separator" style="text-align:center"><input id="submit-buttonio_timer_1" type="button" value="Submit file">&nbsp;&nbsp;<input id="dsb-hide-submissionio_timer_1" type="button" value="Hide"></div><div id="source-file-namesio_timer_1"></div><input type="hidden" name="cmd" value="SubmitAnswer"><input type="hidden" name="problem" value="5727489229848576"><input type="hidden" name="input_id" value="1"><input type="hidden" name="num_source_files" id="num-source-filesio_timer_1" value="1"><input type="hidden" name="agent" value="website"></form></div></div></div></td></tr></tbody></table><!-- Problem Statement --><div id="dsb-problem-content-div0" class="dsb-problem-content-div" style="width: 40em;"><h3>Problem</h3>
<p>
Professor Shekhu has another problem for Akki today. He has given him three positive integers
  <b>A</b>, <b>N</b> and <b>P</b> and wants him to calculate the remainder when <b>A<sup>N!</sup></b>
  is divided by <b>P</b>. As usual, <b>N!</b> denotes the product of the first <b>N</b> positive integers.
</p>

<h3>Input</h3>
<p>
The first line of the input gives the number of test cases, <b>T</b>. <b>T</b> lines follow. Each
  line contains three integers <b>A</b>, <b>N</b> and <b>P</b>, as described above.
</p>

<h3>Output</h3>
<p>
For each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the
  test case number (starting from 1) and <code>y</code> is the answer.
</p>

<h3>Limits</h3>
<p>
1 ≤ <b>T</b> ≤ 100.<br>
</p>

<h4>Small dataset</h4>
<p>
1 ≤ <b>A</b> ≤ 10.<br>
1 ≤ <b>N</b> ≤ 10.<br>
1 ≤ <b>P</b> ≤ 10.<br>
</p>

<h4>Large dataset</h4>
<p>
1 ≤ <b>A</b> ≤ 10<sup>5</sup>.<br>
1 ≤ <b>N</b> ≤ 10<sup>5</sup>.<br>
1 ≤ <b>P</b> ≤ 10<sup>5</sup>.<br>
</p>


<h3>Sample</h3>
<div class="problem-io-wrapper">
<table>
<tbody><tr>
<td>
<br>
<span class="io-table-header">Input</span>
<br>&nbsp;
</td>
<td>
<br>
<span class="io-table-header">Output</span>
<br>&nbsp;
</td>
</tr>
<tr>
<td>
<pre class="io-content">2
2 1 2
3 3 2

</pre>
</td>
<td>
<pre class="io-content">Case #1: 0
Case #2: 1

</pre>
</td></tr></tbody></table>
</div>

  <p>
  In Sample Case #1, the answer is the remainder when 2<sup>1!</sup> = 2 is divided by 2, which is 0.
    </p>
  <p>
    In Sample Case #2, the answer is the remainder when 3<sup>3!</sup> = 3<sup>6</sup> = 729 is
    divided by 2, which is 1.
    </p>
</div></div><div id="dsb-problem-page1" class="dsb-content-pages" style="display: none;"><!-- Problem Input File Selection --><div class="dsb-input-panel-text" id="dsb-input-panel-text1"><span style="color: #666666;">This contest is open for practice.  You can try every problem as many times as you like, though we won't keep track of which problems you solve.  Read the <a href="https://code.google.com/codejam/resources/quickstart-guide#gcj" target="_blank">Quick-Start Guide</a> to get started.</span></div><table><tbody id="dsb-input-form-table1"><tr><td class="dsb-input-table-description">Small input<br>15 points</td><td class="dsb-input-table-linktd"><div id="dsb-action-box-wrap1-0" class=""><div id="dsb-input-wrapper1-0" class="dsb-input-wrapper" style="display: inline;"><button class="dsb-input-start-button" id="dsb-input-start-button1-0" style="display: inline;">Solve B-small</button><span class="dsb-input-link-span" id="dsb-input-link-plain1-0" style="display: none;"><img class="dsb-input-link-img" src="./Problem C. Matrix Cutting_files/file.gif"><span class="dsb-input-link-text" id="dsb-input-link-plain-text1-0">Download B-small-practice.in</span></span></div><span class="dsb-input-table-caption" id="dsb-input-table-caption1-0" style="display: none;"></span><span class="dsb-input-table-caption" id="dsb-resubmit-caption1-0" style="display: none;">Your submission was received. You can still <span class="dsb-input-link-text" id="dsb-resubmit-link1-0">resubmit</span> for <span id="dsb-resubmit-timer1-0"></span>.<br>Only your last submission counts. <span class="dsb-input-link-text" id="dsb-resubmit-view-sub-link1-0">View your last submission</span>.</span><div><div class="dsb-submit-form-div" id="dsb-submit-form-div1-0" style="display: none;"><div style="display:none"><b>Time Remaining:</b> <span id="io_timer_2"></span>&nbsp;&nbsp;</div><div style="display:none"><b>Input:</b> B-small-practice.in.</div><form id="submit-formio_timer_2" action="https://code.google.com/codejam/contest/3254486/dashboard/do" enctype="multipart/form-data" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="ZTU1MDE2MDZjNDdmYjc0MTc4NDVhMWMwYjJkOGYwMTd8fDE1MjI2NDk3MTI5MjgyMDA="><div class="dsb-submit-form-separator">your output file:<input id="output-fileio_timer_2" type="file" name="answer" class="submitFormFile"></div><div style="display: none"><table class="dsb-source-code-table"><tbody><tr><td style="padding:0.4em 0.2em 0 0">source code:&nbsp;&nbsp;</td><td><div id="source-filesio_timer_2"><div id="input-file-divio_timer_2-0"><span id="source-fileio_timer_2-0"><input type="file" name="source-file0" class="submitFormFile"></span><span id="remove-source-fileio_timer_2-0" class="dsb-submit-form-links" style="visibility: hidden;">remove</span></div></div><span id="add-source-fileio_timer_2" class="dsb-submit-form-links">Add another file</span></td></tr></tbody></table></div><div class="dsb-submit-form-separator" style="color:gray">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><div class="dsb-submit-form-separator" style="text-align:center"><input id="submit-buttonio_timer_2" type="button" value="Submit file">&nbsp;&nbsp;<input id="dsb-hide-submissionio_timer_2" type="button" value="Hide"></div><div id="source-file-namesio_timer_2"></div><input type="hidden" name="cmd" value="SubmitAnswer"><input type="hidden" name="problem" value="5629754027802624"><input type="hidden" name="input_id" value="0"><input type="hidden" name="num_source_files" id="num-source-filesio_timer_2" value="1"><input type="hidden" name="agent" value="website"></form></div></div></div></td></tr><tr><td class="dsb-input-table-description">Large input<br>19 points</td><td class="dsb-input-table-linktd"><div id="dsb-action-box-wrap1-1" class=""><div id="dsb-input-wrapper1-1" class="dsb-input-wrapper" style="display: inline;"><button class="dsb-input-start-button" id="dsb-input-start-button1-1" style="display: inline;">Solve B-large</button><span class="dsb-input-link-span" id="dsb-input-link-plain1-1" style="display: none;"><img class="dsb-input-link-img" src="./Problem C. Matrix Cutting_files/file.gif"><span class="dsb-input-link-text" id="dsb-input-link-plain-text1-1">Download B-large-practice.in</span></span></div><span class="dsb-input-table-caption" id="dsb-input-table-caption1-1" style="display: none;"></span><span class="dsb-input-table-caption" id="dsb-resubmit-caption1-1" style="display: none;">Your submission was received. You can still <span class="dsb-input-link-text" id="dsb-resubmit-link1-1">resubmit</span> for <span id="dsb-resubmit-timer1-1"></span>.<br>Only your last submission counts. <span class="dsb-input-link-text" id="dsb-resubmit-view-sub-link1-1">View your last submission</span>.</span><div><div class="dsb-submit-form-div" id="dsb-submit-form-div1-1" style="display: none;"><div style="display:none"><b>Time Remaining:</b> <span id="io_timer_3"></span>&nbsp;&nbsp;</div><div style="display:none">You may resubmit this multiple times within the remaining time-frame. Only your last submission will count.</div><form id="submit-formio_timer_3" action="https://code.google.com/codejam/contest/3254486/dashboard/do" enctype="multipart/form-data" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="ZTU1MDE2MDZjNDdmYjc0MTc4NDVhMWMwYjJkOGYwMTd8fDE1MjI2NDk3MTI5MjgyMDA="><div class="dsb-submit-form-separator">your output file:<input id="output-fileio_timer_3" type="file" name="answer" class="submitFormFile"></div><div style="display: none"><table class="dsb-source-code-table"><tbody><tr><td style="padding:0.4em 0.2em 0 0">source code:&nbsp;&nbsp;</td><td><div id="source-filesio_timer_3"><div id="input-file-divio_timer_3-0"><span id="source-fileio_timer_3-0"><input type="file" name="source-file0" class="submitFormFile"></span><span id="remove-source-fileio_timer_3-0" class="dsb-submit-form-links" style="visibility: hidden;">remove</span></div></div><span id="add-source-fileio_timer_3" class="dsb-submit-form-links">Add another file</span></td></tr></tbody></table></div><div class="dsb-submit-form-separator" style="color:gray">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><div class="dsb-submit-form-separator" style="text-align:center"><input id="submit-buttonio_timer_3" type="button" value="Submit file">&nbsp;&nbsp;<input id="dsb-hide-submissionio_timer_3" type="button" value="Hide"></div><div id="source-file-namesio_timer_3"></div><input type="hidden" name="cmd" value="SubmitAnswer"><input type="hidden" name="problem" value="5629754027802624"><input type="hidden" name="input_id" value="1"><input type="hidden" name="num_source_files" id="num-source-filesio_timer_3" value="1"><input type="hidden" name="agent" value="website"></form></div></div></div></td></tr></tbody></table><!-- Problem Statement --><div id="dsb-problem-content-div1" class="dsb-problem-content-div" style="width: 40em;"><h3>Problem</h3>
<p>
Professor Shekhu was a famous scientist working in the field of game theory in the early days of computer
  science. Right now, he's working on a game which involves a box containing <b>N</b> distinct cards.
   The i-th of these cards has a red number written on one side, and a blue number written on the other side.
  Both of these numbers are positive integers. The game proceeds as follows:
  </p><ul>
    <li>The player starts with a total of 0 points. The objective of the game is to finish with the
      <i>lowest</i> possible total.</li>
    <li>As long as there are at least two cards remaining in the box, the player must repeat the following move:
      <ul>
        <li>Remove two cards of their choice from the box. Choose a red number <b>R</b> from one card and a
          blue number <b>B</b> from the other card.</li>
        <li>Add the value <b>R ^ B</b> to the total, where <b>^</b> denotes bitwise XOR operation.</li>
        <li>Return one of the two cards to the box, and remove the other from the game.</li>
      </ul>
    </li>
    <li>The game ends when there is only one card remaining in the box (and so it is impossible to
    make another move).</li>
  </ul>
<p></p>
<p>
Professor Shekhu has summoned his best student, Akki, to play this game. Can you help Akki find the minimum possible total,
  considering all possible ways in which he can play the game?
</p>


<h3>Input</h3>
<p>
The first line of the input contains an integer <b>T</b>, the number of test cases. <b>T</b> test cases follow;
  each test case consists of three lines:<br>
First line of the each test case will contain an integer <b>N</b>.<br>
   </p><ol>
  <li>The first line contains a positive integer <b>N</b>: the number of cards in the box.</li>
  <li>The second line contains a list of <b>N</b> positive integers <b>R<sub>i</sub></b>;
    the i-th of these represents the red number on the i-th card.</li>
     <li>The third line contains a list of <b>N</b> positive integers <b>B<sub>i</sub></b>;
       the i-th of these represents the blue number on the i-th card.</li>
  </ol>
<p></p>

<h3>Output</h3>
<p>
For each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the
  test case number (starting from 1) and <code>y</code> is the minimum possible total that Akki can
  attain, if he plays optimally.
</p>

<h3>Limits</h3>
<p>
1 ≤ <b>T</b> ≤ 100.<br>
1 ≤ <b>R<sub>i</sub></b> ≤ 10<sup>9</sup>.<br>
1 ≤ <b>B<sub>i</sub></b> ≤ 10<sup>9</sup>.<br>
</p>

<h4>Small dataset</h4>
<p>
2 ≤ <b>N</b> ≤ 5.<br>
</p>

<h4>Large dataset</h4>
<p>
2 ≤ <b>N</b> ≤ 100.<br>
</p>


<h3>Sample</h3>
<div class="problem-io-wrapper">
<table>
<tbody><tr>
<td>
<br>
<span class="io-table-header">Input</span>
<br>&nbsp;
</td>
<td>
<br>
<span class="io-table-header">Output</span>
<br>&nbsp;
</td>
</tr>
<tr>
<td>
<pre class="io-content">2
2
1 2
3 3
3
1 101 501
3 2 3

</pre>
</td>
<td>
<pre class="io-content">Case #1: 1
Case #2: 5

</pre>
</td></tr></tbody></table>
</div>

<p>
In Sample Case #1, Akki has only one move in which he picks up the available cards and has two options.
     </p><ol>
       <li>He can choose red number from the first card and blue number from the second card
         to add 1 ^ 3 = 2 to the total.</li>
       <li>He can choose red number from the second card and blue number from the first card
         to add 2 ^ 3 = 1 to the total.</li>
  </ol>
  The second option is better and the answer is 1.
<p></p>

<p>
In Sample Case #2, one optimal strategy is to take the red number from first card and the blue
  number from second card, add 1 ^ 2 = 3 to the total, and return first card to the box. Then, take
  the red number from first card and the blue number from third card, add 1 ^ 3 = 2 to the total,
  and return either of the cards to the box. The final total is 5.
</p>
</div></div><div id="dsb-problem-page2" class="dsb-content-pages" style="display: block;"><!-- Problem Input File Selection --><div class="dsb-input-panel-text" id="dsb-input-panel-text2"><span style="color: #666666;">This contest is open for practice.  You can try every problem as many times as you like, though we won't keep track of which problems you solve.  Read the <a href="https://code.google.com/codejam/resources/quickstart-guide#gcj" target="_blank">Quick-Start Guide</a> to get started.</span></div><table><tbody id="dsb-input-form-table2"><tr><td class="dsb-input-table-description">Small input<br>17 points</td><td class="dsb-input-table-linktd"><div id="dsb-action-box-wrap2-0" class=""><div id="dsb-input-wrapper2-0" class="dsb-input-wrapper" style="display: inline;"><button class="dsb-input-start-button" id="dsb-input-start-button2-0" style="display: inline;">Solve C-small</button><span class="dsb-input-link-span" id="dsb-input-link-plain2-0" style="display: none;"><img class="dsb-input-link-img" src="./Problem C. Matrix Cutting_files/file.gif"><span class="dsb-input-link-text" id="dsb-input-link-plain-text2-0">Download C-small-practice.in</span></span></div><span class="dsb-input-table-caption" id="dsb-input-table-caption2-0" style="display: none;"></span><span class="dsb-input-table-caption" id="dsb-resubmit-caption2-0" style="display: none;">Your submission was received. You can still <span class="dsb-input-link-text" id="dsb-resubmit-link2-0">resubmit</span> for <span id="dsb-resubmit-timer2-0"></span>.<br>Only your last submission counts. <span class="dsb-input-link-text" id="dsb-resubmit-view-sub-link2-0">View your last submission</span>.</span><div><div class="dsb-submit-form-div" id="dsb-submit-form-div2-0" style="display: none;"><div style="display:none"><b>Time Remaining:</b> <span id="io_timer_4"></span>&nbsp;&nbsp;</div><div style="display:none"><b>Input:</b> C-small-practice.in.</div><form id="submit-formio_timer_4" action="https://code.google.com/codejam/contest/3254486/dashboard/do" enctype="multipart/form-data" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="ZTU1MDE2MDZjNDdmYjc0MTc4NDVhMWMwYjJkOGYwMTd8fDE1MjI2NDk3MTI5MjgyMDA="><div class="dsb-submit-form-separator">your output file:<input id="output-fileio_timer_4" type="file" name="answer" class="submitFormFile"></div><div style="display: none"><table class="dsb-source-code-table"><tbody><tr><td style="padding:0.4em 0.2em 0 0">source code:&nbsp;&nbsp;</td><td><div id="source-filesio_timer_4"><div id="input-file-divio_timer_4-0"><span id="source-fileio_timer_4-0"><input type="file" name="source-file0" class="submitFormFile"></span><span id="remove-source-fileio_timer_4-0" class="dsb-submit-form-links" style="visibility: hidden;">remove</span></div></div><span id="add-source-fileio_timer_4" class="dsb-submit-form-links">Add another file</span></td></tr></tbody></table></div><div class="dsb-submit-form-separator" style="color:gray">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><div class="dsb-submit-form-separator" style="text-align:center"><input id="submit-buttonio_timer_4" type="button" value="Submit file">&nbsp;&nbsp;<input id="dsb-hide-submissionio_timer_4" type="button" value="Hide"></div><div id="source-file-namesio_timer_4"></div><input type="hidden" name="cmd" value="SubmitAnswer"><input type="hidden" name="problem" value="5186324373962752"><input type="hidden" name="input_id" value="0"><input type="hidden" name="num_source_files" id="num-source-filesio_timer_4" value="1"><input type="hidden" name="agent" value="website"></form></div></div></div></td></tr><tr><td class="dsb-input-table-description">Large input<br>25 points</td><td class="dsb-input-table-linktd"><div id="dsb-action-box-wrap2-1" class=""><div id="dsb-input-wrapper2-1" class="dsb-input-wrapper" style="display: inline;"><button class="dsb-input-start-button" id="dsb-input-start-button2-1" style="display: inline;">Solve C-large</button><span class="dsb-input-link-span" id="dsb-input-link-plain2-1" style="display: none;"><img class="dsb-input-link-img" src="./Problem C. Matrix Cutting_files/file.gif"><span class="dsb-input-link-text" id="dsb-input-link-plain-text2-1">Download C-large-practice.in</span></span></div><span class="dsb-input-table-caption" id="dsb-input-table-caption2-1" style="display: none;"></span><span class="dsb-input-table-caption" id="dsb-resubmit-caption2-1" style="display: none;">Your submission was received. You can still <span class="dsb-input-link-text" id="dsb-resubmit-link2-1">resubmit</span> for <span id="dsb-resubmit-timer2-1"></span>.<br>Only your last submission counts. <span class="dsb-input-link-text" id="dsb-resubmit-view-sub-link2-1">View your last submission</span>.</span><div><div class="dsb-submit-form-div" id="dsb-submit-form-div2-1" style="display: none;"><div style="display:none"><b>Time Remaining:</b> <span id="io_timer_5"></span>&nbsp;&nbsp;</div><div style="display:none">You may resubmit this multiple times within the remaining time-frame. Only your last submission will count.</div><form id="submit-formio_timer_5" action="https://code.google.com/codejam/contest/3254486/dashboard/do" enctype="multipart/form-data" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="ZTU1MDE2MDZjNDdmYjc0MTc4NDVhMWMwYjJkOGYwMTd8fDE1MjI2NDk3MTI5MjgyMDA="><div class="dsb-submit-form-separator">your output file:<input id="output-fileio_timer_5" type="file" name="answer" class="submitFormFile"></div><div style="display: none"><table class="dsb-source-code-table"><tbody><tr><td style="padding:0.4em 0.2em 0 0">source code:&nbsp;&nbsp;</td><td><div id="source-filesio_timer_5"><div id="input-file-divio_timer_5-0"><span id="source-fileio_timer_5-0"><input type="file" name="source-file0" class="submitFormFile"></span><span id="remove-source-fileio_timer_5-0" class="dsb-submit-form-links" style="visibility: hidden;">remove</span></div></div><span id="add-source-fileio_timer_5" class="dsb-submit-form-links">Add another file</span></td></tr></tbody></table></div><div class="dsb-submit-form-separator" style="color:gray">source file(s): &nbsp;&nbsp;&nbsp;not needed for the practice contest</div><div class="dsb-submit-form-separator" style="text-align:center"><input id="submit-buttonio_timer_5" type="button" value="Submit file">&nbsp;&nbsp;<input id="dsb-hide-submissionio_timer_5" type="button" value="Hide"></div><div id="source-file-namesio_timer_5"></div><input type="hidden" name="cmd" value="SubmitAnswer"><input type="hidden" name="problem" value="5186324373962752"><input type="hidden" name="input_id" value="1"><input type="hidden" name="num_source_files" id="num-source-filesio_timer_5" value="1"><input type="hidden" name="agent" value="website"></form></div></div></div></td></tr></tbody></table><!-- Problem Statement --><div id="dsb-problem-content-div2" class="dsb-problem-content-div" style="width: 40em;"><h3>Problem</h3>
<p>
  Prof Shekhu has a matrix of <b>N</b> rows and <b>M</b> columns where rows are numbered from 0 to <b>N-1</b>
  from top to bottom, and columns are numbered from 0 to <b>M-1</b> from left to right. Each cell in the matrix
  contains a positive integer.
</p>

<p>
  He wants to cut this matrix into <b>N * M</b> submatrices (each of size 1 * 1) by making horizontal
  and vertical cuts. A cut can be made only on the boundary between two rows or two columns.
</p>
<p>
  Prof Shekhu invites his best student Akki for this job and makes an interesting proposition.
  Every time Akki makes a cut in a submatrix, before he makes the cut, he is awarded a number of coins
  equal to the minimum value in that submatrix.
  Note that with every cut, the total number of submatrices increases. Also, cuts in any two different
  submatrices are independent and likewise, Akki is awarded independently for the cuts in different submatrices.
</p>
<p>
  Now, Akki has various ways in which he can make the cuts. Can you help him by maximizing the total
  number of coins he can gain?
</p>


<h3>Input</h3>
<p>
The first line of the input contains an integer <b>T</b>, the number of test cases. <b>T</b> test cases follow.
The first line of each test case contains two integers <b>N</b> and <b>M</b>, as described above.<br>
 Next, there are <b>N</b> lines of <b>M</b> positive integers each; these describe the matrix.<br></p>

<h3>Output</h3>
<p>
  For each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the
  test case number (starting from 1) and <code>y</code> is the maximum possible number of coins that Akki can
  be awarded, if he makes the cuts in optimal order.
</p>

<h3>Limits</h3>
<p>
1 ≤ <b>T</b> ≤ 100.<br>
1 ≤ each value in the matrix ≤ 10<sup>5</sup>.<br>
</p>

<h4>Small dataset</h4>
<p>
<b>N</b> = 1.<br>
1 ≤ <b>M</b> ≤ 10.<br>
</p>

<h4>Large dataset</h4>
<p>
1 ≤ <b>N</b> ≤ 40.<br>
1 ≤ <b>M</b> ≤ 40.<br>
</p>


<h3>Sample</h3>
<div class="problem-io-wrapper">
<table>
<tbody><tr>
<td>
<br>
<span class="io-table-header">Input</span>
<br>&nbsp;
</td>
<td>
<br>
<span class="io-table-header">Output</span>
<br>&nbsp;
</td>
</tr>
<tr>
<td>
<pre class="io-content">3
2 2
1 2
3 4
2 3
1 2 1
2 3 2
1 2
1 2

</pre>
</td>
<td>
<pre class="io-content">Case #1: 5
Case #2: 7
Case #3: 1

</pre>
</td></tr></tbody></table>
</div>

  <p>
In Sample Case #1, there are two possible ways in which Akki can make the cuts.
  </p><ol>
       <li>Suppose that Akki first cuts the matrix horizontally. He is awarded the minimum value in the matrix: 1.
         Then he has to make vertical cuts in the two submatrices ([1, 2] and [3, 4]), for which he
         gets 1 and 3 coins, respectively.</li>
       <li>Suppose that Akki first cuts the matrix vertically. He is awarded the minimum value in the matrix: 1.
         Then he has to make horizontal cuts in the two submatrices (which have the transposes [1, 3]
         and [2, 4]), for which he gets 1 and 2 coins, respectively.</li>
  </ol>
  The first strategy is better, and the answer is 5.
  <p></p>

<p>
  In Sample Case #2, Akki can be awarded at most 7 coins. One of the optimal ways is to first make
  the only horizontal cut to earn 1 coin. Then, in the upper submatrix [1, 2, 1], Akki can first
  make the cut immediately to the right of first column and then the cut immediately to the right of second
  column to earn a total of 2 coins.
  Similarly, in the lower submatrix [2, 3, 2], Akki can first make the cut immediately to the right of second column
  and then the cut immediately to the right of first column to earn a total of 4 coins.
</p>
<p>
In Sample Case #3, there is only one cut to be made.
</p>
</div></div></div>

    <div id="dsb-analysis-page" class="dsb-content-pages"><div id="dsb-analysis-selections"><span id="dsb-analysis-selection-p3" class="dsb-analysis-selected">Overview</span>&nbsp; | &nbsp;<span id="dsb-analysis-selection-p0" class="dsb-analysis-not-selected">Problem A</span>&nbsp; | &nbsp;<span id="dsb-analysis-selection-p1" class="dsb-analysis-not-selected">Problem B</span>&nbsp; | &nbsp;<span id="dsb-analysis-selection-p2" class="dsb-analysis-not-selected">Problem C</span></div><div id="dsb-problem-analysis-div3" class="dsb-problem-content-div"><p>
  This Kickstart round began with <i>Huge Numbers</i>, which could be solved by taking advantage of a basic property of exponents.
  Then came <i>Cards Game</i>, which appeared to be solvable via some complicated greedy approaches,
  but turned out to have an elegant minimum spanning tree approach.
  Finally, we had <i>Matrix Cutting</i>, which involved breaking a large matrix into smaller independent
  submatrices by making horizontal and vertical cuts. It could be solved via dynamic programming.
</p><p>
  Thanks to everyone who participated!
</p>
<hr>
<p>
  <b>Cast</b>
</p><p>
  Problem A (Huge Numbers): Written and prepared by Lalit Kundu.
</p><p>
  Problem B (Cards Game): Written by Amit Pandey. Prepared by Amit Pandey and Lalit Kundu.
</p><p>
  Problem C (Matrix Cutting): Written and prepared by Lalit Kundu.
</p><p>
  Solutions and other problem preparation and review by Akashdeep Nain, Nishant Redkar, Ian Tullis
  and Xuan'ang Zhao.
</p>
<p></p><p>
Analyses by Lalit Kundu.</p></div><div id="dsb-problem-analysis-div0" class="dsb-problem-content-div" style="display: none;"><h2>Huge Numbers : Analysis</h2>

<h3>Small dataset</h3>
<p>
  For the small input, calculating the actual value of <b>N</b> factorial suffices, since <b>N</b>
  is up to 10. We just need to calculate <b>A<sup>n</sup></b> mod <b>P</b>, where n could be up to
  10! = 3628800. We can compute this iteratively, maintaining our answer modulo <b>P</b> at all times,
  as in the following pseudocode:
</p>
<p></p><pre>  ans = 1
  for i = 1 to factorial(N)
    // Since, multiplication is associative modulo <b>P</b>,
    // we can maintain our answer modulo <b>P</b>
    ans = (ans * <b>A</b>) % <b>P</b>
  return ans
</pre>
Since <b>P</b> and <b>A</b> are both no greater than 10<sup>5</sup>, and we are taking modulo <b>P</b> at
each stage, we do not need to worry that (ans * <b>A</b>) will overflow the result, provided that
we use a long rather than an int to store ans.
<p></p>

<h3>Large dataset</h3>
<p>
At first, it may seem like this problem requires a number-theoretic approach.
  But there exists a very simple solution which employs fast exponentiation.<br>
  First, let's see how efficiently we can calculate <b>A<sup>n</sup></b> mod <b>P</b> for a given n.
  We can use a divide and conquer approach to come up with an O(log n) solution, as summarized by
  the following algorithm:
</p>
<p>
  </p><pre>  pow(a, n, p):
    if n == 0
      return 1

    pow_half = pow(a, n / 2, p)
    pow_half_sq = (pow_half  * pow_half) % p // again, multiplication is associative modulo p
    if n % 2 == 0
      return pow_half_sq
    else
      return (pow_half_sq * a) % p
  </pre>
<p></p>

<p>
  We can also take advantage of a basic property of exponents: a<sup>b*c</sup> can be rewritten as a<sup>b<sup>c</sup></sup>.
  So, we can write <b>A<sup>N!</sup></b> as <b>A<sup>1<sup>2<sup>3...</sup></sup></sup></b>. And,
  since multiplication modulo <b>P</b> is associative, we can maintain our answer modulo <b>P</b> at all times.
  So, our O(<b>N</b> log <b>N</b>) algorithm is:
</p>
<p>
  </p><pre>  ans = <b>A</b> % <b>P</b>
  for i = 2 to <b>N</b>
    ans = pow(ans, i, <b>P</b>)
  return ans
  </pre>
<p></p></div><div id="dsb-problem-analysis-div1" class="dsb-problem-content-div" style="display: none;"><h2>Cards Game : Analysis</h2>

<h3>Small dataset</h3>
<p>
  For this dataset, maximum value of <b>N</b> doesn't exceed 5. So, we can do an exhaustive
  search on all possible ways to play the game to find the optimal answer. Pseudocode:
</p>
<p>
  </p><pre>  remove(A, i): // returns a copy of A after removing i^th element
    A' = copy(A)
    remove i^th element from A'
    return A'

  f(r, b): // returns answer for input arrays r and b
    total_cards = length(r)
    ans = 0

    // choose two distinct elements from the array
    for i = 0 to total_cards - 1, inclusive
      for j = 0 to total_cards - 1, inclusive
        if i == j
          continue

        // note that from two chosen cards, we'll always choose the red and blue numbers
        // in such a way that we've to add minimum value to the answer
        current_ans = min(r[i] ^ b[j], r[j] ^ b[i])

        // consider two cases of which card to discard and update current answer
        current_ans += min(f(remove(r, i), remove(b, i)), f(remove(r, j), remove(b, j)))

        ans = min(ans, current_ans)

     return ans
  </pre>
Total complexity of this approach would of O(2<sup><b>N</b></sup> * <b>N</b><sup>3</sup>). However,
this can be optimized to O(2<sup><b>N</b></sup> * <b>N</b><sup>2</sup>) by maintaing a bitmask as
the parameter to function f, instead of whole arrays.
<p></p>

<h3>Large dataset</h3>
<p>
  For this dataset, we need an efficient approach than in the Small dataset, since <b>N</b> is up to
  100. One helpful observation is that every card (except the last card) is eliminated with the help
  of another card. Say, card i is eliminated with the help of a card f(i) in our answer. Let's build a graph
  of <b>N</b> nodes where we add an edge between node i and f(i). What can we say about this graph?
  We're trying to explore the constraints on this graph, such that it's possible to build a series of valid moves
  from this graph. We know there is atmost one edge between any two nodes. Also, i ≠ f(i) (two cards
  cannot eliminate each other).We can extend this logic to three cards: if card x is eliminated by y,
  and card y is eliminated by z, card z cannot be eliminated by x. This can be extended to a cycle of arbit number of cards.
Hence, the graph formed by adding an edge between i and f(i), for all i, should be an undirected tree.
</p>
<p>
  We know that we're trying to build a tree by adding edge between <b>N</b> cards in input. We also
  know that cost of adding an edge between card i and card j would be mininimum of <b>R</b><sub>i</sub> ^ <b>B</b><sub>j</sub>
  and <b>R</b><sub>j</sub> ^ <b>B</b><sub>i</sub>. So, we're essentially looking for a tree such that
  sum of weights of edges is minimized. This sounds incredibly similar to the minimum spanning tree (MST) problem,
  which aims to find "a subset of the edges of a connected, edge-weighted undirected graph that connects
  all the vertices together, without any cycles and with the minimum possible total edge weight".
  In our case, we need to choose a subset of edges from the graph formed by adding a weighted edge between
  every pair of cards, where the weight of the edge is equal to cost of eliminating one card using the other.
</p>
<p>
  We can use any MST algorithm such as Prim's or Kruskal's. Efficient algorithms can solve the problem
  of finding a MST in a graph of V vertices and E edges in O(E log V). Hence, our problem can be solved
  in O(<b>N</b><sup>2</sup>) or O(<b>N</b><sup>2</sup> log <b>N</b>).
</p></div><div id="dsb-problem-analysis-div2" class="dsb-problem-content-div" style="display: none;"><h2>Matrix Cutting : Analysis</h2>

<h3>Small dataset</h3>
<p>
We have a 1-D array of size <b>M</b> which needs be broken down into <b>M</b> parts by making
vertical cuts in an order of our choice, where each vertical cut yields a number of coins equal to
  the minimum value in the subarray at the time of the cut. Our objective is to make the cuts in an order
  that maximizes the total number of coins.
  </p>
<p>
  Since <b>M</b> can be no greater than 10 in this dataset, we can simply consider all possible
  orderings of the cuts. For each permutation, we can simulate the cuts and calculate the total number
  of coins, and then output the maximum total we find across all permutations. The complexity of this
  approach is O(<b>M</b>!), which is sufficient for the Small dataset.
</p>
<p>
However, we will have an easier time with the Large dataset if we come up with a better approach.
  One helpful observation is that once a cut is made, the problem has been reduced to two independent
  problems of the same type: one for the left subarray, and one for the right subarray.
  This strongly suggests a dynamic programming (DP) based solution.
</p>
<p>
  We can define each subproblem in the DP as f(L, R): the answer for a subarray ranging from positions
  L to R, inclusive, in the original array. Our final answer is f(0, <b>M</b>-1).
  Now we need a recurrence relation, which we can develop by iterating over the position of the
  first cut we make, as in the following pseudocode:
</p>
<p>
  </p><pre>  f(L, R, A): // A is the original array

    ans = 0

    // Assuming first cut is made immediately to the right of cut_position
    for cut_position in L to R - 1, inclusive
      ans = max(ans , f(L, cut_position) + f(cut_position + 1, R))

    // we can calculate this in O(M).
    current_coins = minimum value in A over positions L to R, inclusive

    // For the current cut, we get the same number of coins no matter where we cut.
    return ans + current_coins
  </pre>
With memoization, the total complexity of this approach is O(<b>M</b><sup>3</sup>). Remember, the
complexity of a DP approach is given by the number of possible distinct states times the cost of transitioning between states.

<p></p>

<h3>Large dataset</h3>
<p>
  In the Large dataset, we have a 2-D matrix in which we can make horizontal cuts as well as vertical cuts.
  Since the total number of cuts could be up to 80, and those cuts could occur in many possible orders, our brute force method no longer works.
</p>
<p>
  However, our efficient
  DP approach from the 1-D case can be extended to the 2-D case, by redefining our DP state to
  describe the answer for a submatrix instead of a subarray. So, we define f(L, R, P, Q) as the answer
  for a submatrix defined by the intersection of rows L through R, and columns P through Q (all limits inclusive).
  A recurrence relation can be derived by iterating over all possible horizontal and vertical cuts as the first cut we make.
  Pseudocode:
</p>
<p>
  </p><pre>  f(L, R, P, Q, A): // A is original matrix

    ans = 0

    // horizontal cuts
    for horz_cut = L to R - 1, inclusive
      ans = max(ans, f(L, horz_cut, P, Q) + f(horz_cut + 1, R, P, Q) + current_coins)

    // vertical cuts
    for vert_cut = P to Q - 1, inclusive
      ans = max(ans, f(L, R, P, vert_cut) + f(L, R, vert_cut + 1, Q) + current_coins)


    // we need to calculate this in less than O(<b>N</b> + <b>M</b>), if we don't want this step
    // to dominate the transition cost
    current_coins = minimum value in current submatrix (defined by L, R, P, Q)

    // For the current cut, we get the same number of coins no matter where we cut.
    return ans + current_coins
  </pre>
<p></p>
<p>
The only remaining piece of the puzzle is: how do we calculate the minimum value in a submatrix efficiently,
  in time linear or better in the number of rows and columns of the submatrix? We can pre-calculate
  answer for all O(<b>N<sup>2</sup>M<sup>2</sup></b>) submatrices, which is easier if you fix the
  top-left corner of the submatrix and iterate over possible bottom-right corners. This can be done
  in O(<b>N<sup>2</sup>M<sup>2</sup></b>) overall.
</p>
<p>
  The overall complexity of our DP approach is O(<b>N</b><sup>2</sup><b>M</b><sup>2</sup>(<b>N</b> + <b>M</b>)),
  which is fast enough for the Large dataset.
</p></div></div>

    <div id="dsb-clarification-page" class="dsb-content-pages">
      <!-- The clarifications table -->
      <div id="clarTableDiv" class="clarTableWrapper"></div><div>
        <table id="dsb-clarification-table" style="display: block;">
          <colgroup span="9">
            <col width="16%"><col width="2%">
            <col width="10%"><col width="2%">
            <col width="28%"><col width="2%">
            <col width="10%"><col width="2%">
            <col width="28%">
          </colgroup>
          <thead>
            <tr>
            <th>Category</th><th>&nbsp;</th>
            <th class="clarTimeColumn">Asked</th><th>&nbsp;</th>
            <th>Question</th><th>&nbsp;</th>
            <th class="clarTimeColumn">Answered</th><th>&nbsp;</th>
            <th>Answer</th>
            </tr>
          </thead>
          <tbody id="dsb-clarification-tbody"><tr class="dsb-clar-tr dsb-clar-tr-announcement"><td class="clarProbTd">[General]<br><span style="color: #666">Announcement</span></td><td></td><td class="clarTimeColumn">1:22:12</td><td></td><td><i>Contest Scorecard not getting Updated</i></td><td></td><td class="clarTimeColumn" style="color: red;">1:25:26</td><td></td><td><i>We are aware of the scoreboard issue, apologies for the inconvenience caused. Please keep solving problems without worrying about the current rank list.</i></td></tr></tbody>
        </table>
      </div>
      <div id="dsb-submit-clarification" style="display: none;">
        <!-- The link to ask a clarification -->
        <div style="padding: 0.5em 0 0.3em 0;">
          <b>Ask a question:</b>
        </div>
        <!-- The form for asking clarification -->
        <div>
          <form onsubmit="return GCJ.submitClarification(this);"><div style="display:none;"><input type="hidden" name="csrfmiddlewaretoken" value="MWY3N2QwYjJmZTRmNGE4ZWE2NzJiYWZjMWQ3ZjlmMzd8fDE1MjI2NDk3MTI0NzcyNTA="></div>
            <div><textarea rows="5" cols="60" name="q"></textarea></div>
            <div style="padding-top: 0.3em">
              <select id="dsb-clarification-problem-select" name="problem">
                <option value="_" selected="">[General]</option>
              <option value="5727489229848576">A. Huge Numbers</option><option value="5629754027802624">B. Cards Game</option><option value="5186324373962752">C. Matrix Cutting</option></select>
              &nbsp;
              <input id="dsb-submit-clarification-button" type="submit" value="Ask">
            </div>
          </form>
        </div>
      </div>
      <!-- Too many pending clarifications -->
      <div id="dsb-cannot-ask-question-text" style="font-weight: bold; padding: 0.5em 0px 0.3em; display: block;">You cannot ask questions at this time. Please email us at codejam@google.com.</div>

    </div>

    <div id="dsb-submissions-page" class="dsb-content-pages">
      <div id="dsb-submissions-status" class="dsb-sub-status-msg">
        You have 0 submissions.
      </div>
      <table id="dsb-submissions-table" class="dsb-sub-main-table" style="display:none">
      <thead>
        <tr id="dsb-sub-main-table-header">
          <th class="dsb-sub-row-id-width">ID</th>
          <th class="dsb-sub-name-width">Problem</th>
          <th class="dsb-sub-difficulty-width">Size</th>
          <th class="dsb-sub-input-width">Input</th>
          <th class="dsb-sub-output-width">Output</th>
          <th class="dsb-sub-source-width">Solution</th>
          <th class="dsb-sub-status-width">Status</th>
          <th class="dsb-sub-time-width">Time</th>
        </tr>
      </thead>
      <tbody id="dsb-submissions-rows">
      </tbody>
      </table>
    </div>

  </div>
  </div>
</div>

</div>

<div style="height: 3em; clear: both;"></div>




<div id="footer">
  
  
  <p>
    All problem statements, input data and contest analyses are
    licensed under the
    <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons Attribution License</a>.
    
  </p>
  
  <span id="copyright">© 2008-2018 Google</span>
  <a href="https://www.google.com/">Google Home</a> -
  <a href="https://code.google.com/codejam/kickstart/terms">Terms and Conditions</a> -
  <a href="http://www.google.com/intl/en/policies">Privacy Policies and Principles</a>
  <br><br>
  <a href="http://cloud.google.com/"><img width="125" height="91" src="./Problem C. Matrix Cutting_files/powered_by_gcp_logo.png"></a>
  
</div>


<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-21302427-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script');
    ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(ga, s);
  })();
</script>



<div style="height: 1em">&nbsp;</div>

<script type="text/javascript">
GCJ.initHistory();
</script><input type="text" name="history_state0" id="history_state0" style="display:none">




</div></body></html>