<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"><title>2997 - Intersecting Dates</title></head><body><table align="center" border="1" cellpadding="3" cellspacing="0"><tbody><tr valign="center"><td rowspan="2" align="center" valign="center"><font color="#0000a0" size="5"><b><img src="Intersecting%20Dates_files/icono.gif"></b></font></td><td colspan="5" align="center" width="500"><font color="#0000a0" size="5"><b>2997 - Intersecting Dates</b></font><br><a href="http://acmicpc-live-archive.uva.es/nuevoportal/region.php?r=wfi&amp;year=2003"><b>World Finals - Prague - 2003/2004</b></a></td></tr><tr valign="center"><td align="center" width="100"><a href="http://acmicpc-live-archive.uva.es/nuevoportal/data/p2997.pdf"><b>PDF</b></a></td><td width="100">&nbsp;</td><td align="center" width="100"><a href="http://acmicpc-live-archive.uva.es/nuevoportal/mailer.php?problem=2997"><b>Submit</b></a></td><td width="100">&nbsp;</td><td align="center" width="100"><a href="http://acmicpc-live-archive.uva.es/nuevoportal/rankprob.php?p=2997"><b>Ranking</b></a></td></tr></tbody></table><p>&nbsp;</p><p>
A research group is developing a computer program that will fetch historical stock market quotes from a service
that charges a fixed fee for each day's quotes that it delivers. The group has examined the collection of
previously-requested quotes and discovered a lot of duplication, resulting in wasted money. So the new program
will maintain a list of all past quotes requested by members of the group. When additional quotes are required,
only quotes for those dates not previously obtained will be fetched from the service, thus minimizing the cost.

</p><p>
You are to write a program that d etermines when new quotes are required. Input for the program consists of the
date ranges for which quotes have been requested in the past and the date ranges for which quotes are required.
The program will then determine the date ranges for which quotes must be fetched from the service.

</p><p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001001000000000000000">
Input</a>&nbsp;</font>
</h2>
There will be multiple input cases. The input for each case begins with two non-negative integers <span class="MATH"><i>NX</i></span> and <span class="MATH"><i>NR</i></span>,
(<!-- MATH
 $0 \le NX, NR \le 100$
 -->
<span class="MATH">0<img src="Intersecting%20Dates_files/2997img1.gif" alt="$ \le$" align="middle" border="0" height="30" width="18"><i>NX</i>, <i>NR</i><img src="Intersecting%20Dates_files/2997img1.gif" alt="$ \le$" align="middle" border="0" height="30" width="18">100</span>). <span class="MATH"><i>NX</i></span> is the number of existing date ranges for quotes requested in the past. <span class="MATH"><i>NR</i></span> is the number
of date ranges in the incoming requests for quotes. Following these are <span class="MATH"><i>NX</i> + <i>NR</i></span> pairs of dates. The first date in
each pair will be less than or equal to the second date in the pair. The first <span class="MATH"><i>NX</i></span> pairs specify the date ranges of
quotes which have been requested and obtained in the past, and the next <span class="MATH"><i>NR</i></span> pairs specify the date ranges for
which quotes are required.

<p>
Two zeroes will follow the input data for the last case.

</p><p>
Each input date will be given in the form <span class="MATH"><i>YYYYMMDD</i></span>. <span class="MATH"><i>YYYY</i></span> is the year (1700 to 2100), <span class="MATH"><i>MM</i></span> is the month (01
to 12), and <span class="MATH"><i>DD</i></span> is the day (in the allowed range for the given month and year). Recall that months 04, 06, 09,
and 11 have 30 days, months 01, 03, 05, 07, 08, 10, and 12 have 31 days, and month 02 has 28 days except in
leap years, when it has 29 days. A year is a leap year if it is evenly divisible by 4 and is not a century year (a
multiple of 100), or if it is divisible by 400.

</p><p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001002000000000000000">
Output</a>&nbsp;</font>
</h2>
For each input case, display the case number (1, 2, ...) followed by a list of any date ranges for which quotes
must be fetched from the service, one date range per output line. Use the American date format shown in the
sample output below. Explicitly indicate (as shown) if no additional quotes must be fetched. If two date ranges
are contiguous or overlap, then merge them into a single date range. If a date range consists of a single date,
print it as a single date, not as a range consisting of two identical dates. Display the date ranges in chronological
order, starting with the earliest date range.

<p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001003000000000000000">
Sample Input</a>&nbsp;</font>
</h2>
<pre>1 1
19900101 19901231
19901201 20000131
0 3
19720101 19720131
19720201 19720228
19720301 19720301
1 1
20010101 20011231
20010515 20010901
0 0
</pre>

<p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001004000000000000000">
Sample Output</a>&nbsp;</font>
</h2>
<pre>Case 1:
    1/1/1991 to 1/31/2000

Case 2:
    1/1/1972 to 2/28/1972
    3/1/1972

Case 3:
    No additional quotes are required.
</pre>

<p>
</p><hr><address>Prague 2003-2004</address><p><b>Tests-Setter:</b> Rujia Liu<br><b>Special Thanks:</b> Yao Guan<br></p></body></html>