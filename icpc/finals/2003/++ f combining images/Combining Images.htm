<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"><title>2726 - Combining Images</title></head><body><table align="center" border="1" cellpadding="3" cellspacing="0"><tbody><tr valign="center"><td rowspan="2" align="center" valign="center"><font color="#0000a0" size="5"><b><img src="Combining%20Images_files/icono.gif"></b></font></td><td colspan="5" align="center" width="500"><font color="#0000a0" size="5"><b>2726 - Combining Images</b></font><br><a href="http://acmicpc-live-archive.uva.es/nuevoportal/region.php?r=wfi&amp;year=2002"><b>World Finals - Beverly Hills - 2002/2003</b></a></td></tr><tr valign="center"><td align="center" width="100"><a href="http://acmicpc-live-archive.uva.es/nuevoportal/data/p2726.pdf"><b>PDF</b></a></td><td width="100">&nbsp;</td><td align="center" width="100"><a href="http://acmicpc-live-archive.uva.es/nuevoportal/mailer.php?problem=2726"><b>Submit</b></a></td><td width="100">&nbsp;</td><td align="center" width="100"><a href="http://acmicpc-live-archive.uva.es/nuevoportal/rankprob.php?p=2726"><b>Ranking</b></a></td></tr></tbody></table><p>&nbsp;</p><p>
As the exchange of images over computer networks becomes more common,
the problem of image compression
takes on increasing importance. Image compression algorithms are used to represent
images using a relatively small
number of bits.

</p><p>
One image compression algorithm is based on an encoding called a ``Quad Tree."
An image has a Quad Tree
encoding if it is a square array of binary pixels (the value of each pixel is 0 or 1,
called the ``color" of the pixel), and
the number of pixels on the side of the square is a power of two.

</p><p>
If an image is homogeneous (all its pixels are of the same color), the Quad Tree
encoding of the image is 1 followed
by the color of the pixels. For example, the Quad Tree encoding of an image
that contains pixels of color 1 only is
11, regardless of the size of the image.

</p><p>
If an image is heterogeneous (it contains pixels of both colors), the Quad Tree
encoding of the image is 0 followed
by the Quad Tree encodings of its upper-left quadrant, its upper-right quadrant,
its lower-left quadrant, and its lower-right quadrant, in order.

</p><p>
The Quad Tree encoding of an image is a string of binary digits. For easier printing,
a Quad Tree encoding can be
converted to a Hex Quad Tree encoding by the following steps:
</p><dl compact="compact">
<dt>a.</dt>
<dd>Prepend a 1 digit as a delimiter on the left of the Quad Tree encoding.
</dd>
<dt>b.</dt>
<dd>Prepend 0 digits on the left as necessary until the number of digits is a multiple of four.
</dd>
<dt>c.</dt>
<dd>Convert each sequence of four binary digits into a hexadecimal digit,
using the digits 0 to 9 and capital A
through F to represent binary patterns from 0000 to 1111.
</dd>
</dl>

<p>
For example, the Hex Quad Tree encoding of an image that contains pixels of
color 1 only is 7, which corresponds
to the binary string 0111.

</p><p>
You must write a program that reads the Hex Quad Tree encoding of two images,
computes a new image that is the
intersection of those two images, and prints its Hex Quad Tree encoding.
Assume that both input images are square
and contain the same number of pixels (although the lengths of their
encodings may differ). If two images A and B
have the same size and shape, their intersection (written as A &amp; B) also has
the same size and shape. By definition,
a pixel of A &amp; B is equal to 1 if and only if the corresponding pixels of
image A and image B are both equal to 1.

</p><p>
The following figure illustrates two input images and their intersection,
together with the Hex Quad Tree encodings
of each image. In the illustration, shaded squares represent pixels of color 1.

</p><p>
</p><div align="center">
<!-- MATH
 $\epsfbox{p2726.eps}$
 -->
<img src="Combining%20Images_files/p2726.gif" alt="\epsfbox{p2726.eps}" align="bottom" border="0" height="171" width="557">
</div>

<p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001001000000000000000">
Input</a>&nbsp;</font>
</h2>
The input data set contains a sequence of test cases, each of which is represented
by two lines of input. In each test
case, the first input line contains the Hex Quad Tree encoding of the first
image and the second line contains the
Hex Quad Tree encoding of the second image. For each input image, the number
of hexadecimal digits in its Hex
Quad Tree encoding will not exceed 100.

<p>
The last test case is followed by two input lines, each containing a single zero.

</p><p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001002000000000000000">
Output</a>&nbsp;</font>
</h2>
For each test case, print `<tt>Image</tt>' followed by its sequence number. On the next line,
print the Hex Quad Tree
encoding of the intersection of the two images for that test case.
Separate the output for consecutive test cases with a blank line.

<p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001003000000000000000">
Sample Input</a>&nbsp;</font>
</h2>
<pre>2FA
2BB
2FB
2EF
7
2FA
0
0
</pre>

<p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001004000000000000000">
Sample Output</a>&nbsp;</font>
</h2>
<pre>Image 1:
2BA

Image 2:
2EB

Image 3:
2FA
</pre>

<p>
</p><hr><address>Beverly Hills 2002-2003</address><p></p></body></html>